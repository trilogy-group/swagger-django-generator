swagger: '2.0'
info:
  title: Devflow API
  version: 1.0.0
host: virtserver.swaggerhub.com
basePath: /abizerlokhandwala/devflows-api/1.0.0
schemes:
  - https
paths:
  /domains:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: search results matching criteria
          schema:
            properties:
              domains:
                items:
                  type: string
                type: array
            type: object
        '400':
          description: bad input parameter
      tags:
        - domain
      description: |
        get all domains
      summary: get all domains
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              name:
                description: Domain name
                type: string
            type: object
      responses:
        '201':
          description: domain created
          schema:
            properties:
              id:
                type: integer
            type: object
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing domain already exists
      tags:
        - domain
      description: Adds a new domain
      summary: add domain
  '/domains/{id}/data-service':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: search results matching criteria
          schema:
            properties:
              repo_name:
                type: string
            type: object
        '400':
          description: bad input parameter
      tags:
        - data model
      description: |
        get data model by domain name
      summary: get model of a domain
  '/domains/{id}/data-service-init':
    post:
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              model_config:
                type: string
            type: object
      responses:
        '201':
          description: data model created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing data model already exists
      tags:
        - data model
      description: Adds a new data model for the given domain
      summary: add data model of a domain
  /flows:
    get:
      produces:
        - application/json
      parameters:
        - description: name of the product
          in: query
          name: product_name
          type: string
      responses:
        '200':
          description: search results matching criteria
          schema:
            properties:
              flows:
                items:
                  properties:
                    name:
                      type: string
                  type: object
                type: array
            type: object
        '400':
          description: bad input parameter
      tags:
        - flow
      description: |
        get flow by product name
      summary: get all flows part of a product
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              flow_json:
                type: object
              name:
                type: string
              product:
                type: string
            type: object
      responses:
        '201':
          description: flow created
          schema:
            properties:
              id:
                type: integer
            type: object
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing flow already exists
      tags:
        - flow
      description: Adds a new flow
      summary: add flow
  '/flows/{id}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: search results matching criteria
          schema:
            properties:
              flow_json:
                type: object
              id:
                type: integer
              name:
                type: string
              prod_version:
                type: string
              product:
                type: string
              staging_version:
                type: string
            type: object
        '400':
          description: bad input parameter
      tags:
        - flow
      description: |
        get flow by id
      summary: get flow
    put:
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              flow_json:
                type: object
              name:
                type: string
              product:
                type: string
            type: object
      responses:
        '204':
          description: flow updated
        '400':
          description: 'invalid input, object invalid'
      tags:
        - flow
      description: Updates a flow
      summary: update flow
  '/flows/{id}/deploy/{env}':
    put:
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
        - in: path
          name: env
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              flow_json:
                type: object
              name:
                type: string
              product:
                type: string
            type: object
      responses:
        '201':
          description: flow deployed
        '400':
          description: 'invalid input, object invalid'
      tags:
        - deploy flow to environment
      description: env parameter can take the values "prod" and "dev"
      summary: deploy flow to environment
  '/flows/{id}/load/{version}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
        - in: path
          name: version
          required: true
          type: string
      responses:
        '200':
          description: search results matching criteria
          schema:
            properties:
              flow_json:
                type: object
              name:
                type: string
              product:
                type: string
            type: object
        '400':
          description: bad input parameter
      tags:
        - load flow
      description: version is the version of the flow
      summary: load flow of given environment
  '/flows/{id}/status':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: true/false
          schema:
            properties:
              status:
                type: boolean
            type: object
        '400':
          description: 'invalid input, object invalid'
      tags:
        - status
      description: get deployment status of flow with given id (true/false)
      summary: get deployment status of flow with given id
  '/flows/{id}/versions':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: get all versions of a flow
          schema:
            properties:
              versions:
                items:
                  type: string
                type: array
            type: object
        '400':
          description: 'invalid input, object invalid'
      tags:
        - flow
      description: get all versions of a flow
      summary: get all versions of a flow
  /products:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: search results matching criteria
          schema:
            properties:
              products:
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                  type: object
                type: array
            type: object
        '400':
          description: bad input parameter
      tags:
        - product
      description: |
        get all products by name
      summary: get all products
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              name:
                type: string
            type: object
      responses:
        '201':
          description: product created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing product already exists
      tags:
        - product
      description: Adds a new product
      summary: add product
  /tasks:
    get:
      produces:
        - application/json
      parameters:
        - description: name of the domain
          in: query
          name: domain_name
          type: string
      responses:
        '200':
          description: search results matching criteria
          schema:
            properties:
              tasks:
                items:
                  properties:
                    framework:
                      type: string
                    id:
                      type: integer
                    name:
                      type: string
                    path:
                      type: string
                    repo_name:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
            type: object
        '400':
          description: bad input parameter
      tags:
        - task
      description: |
        get all tasks part of a domain
      summary: get all tasks part of a domain
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            properties:
              domain_name:
                type: string
              framework:
                type: string
              input_schema:
                properties:
                  args:
                    items:
                      properties:
                        variable_name:
                          type: string
                        variable_type:
                          type: string
                      type: object
                    type: array
                  num_args:
                    type: integer
                type: object
              is_published:
                type: boolean
              name:
                type: string
              output_schema:
                properties:
                  args:
                    items:
                      properties:
                        variable_name:
                          type: string
                        variable_type:
                          type: string
                      type: object
                    type: array
                  num_args:
                    type: integer
                type: object
              path:
                type: string
              repo_name:
                type: string
              type:
                type: string
            type: object
      responses:
        '201':
          description: task created
          schema:
            properties:
              id:
                type: integer
            type: object
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing task already exists
      tags:
        - task
      description: Adds a new task under a particular domain
      summary: add task
  '/tasks/{id}':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: search results matching criteria
          schema:
            properties:
              domain_name:
                type: string
              framework:
                type: string
              id:
                type: integer
              input_schema:
                properties:
                  args:
                    items:
                      properties:
                        variable_name:
                          type: string
                        variable_type:
                          type: string
                      type: object
                    type: array
                  num_args:
                    type: integer
                type: object
              is_bootstrapped:
                type: boolean
              is_published:
                type: boolean
              name:
                type: string
              output_schema:
                properties:
                  args:
                    items:
                      properties:
                        variable_name:
                          type: string
                        variable_type:
                          type: string
                      type: object
                    type: array
                  num_args:
                    type: integer
                type: object
              path:
                type: string
              repo_name:
                type: string
              type:
                type: string
              version:
                type: number
            type: object
        '400':
          description: bad input parameter
      tags:
        - task
      description: |
        get task by id
      summary: get task
  '/tasks/{id}/publish':
    put:
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
        - in: body
          name: body
          schema:
            properties:
              is_published:
                type: boolean
            type: object
      responses:
        '204':
          description: task updated
        '400':
          description: 'invalid input, object invalid'
      tags:
        - task
      description: Updates a task under a particular domain
      summary: update task
  '/tasks/{id}/version':
    get:
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: search results matching criteria
          schema:
            properties:
              versions:
                items:
                  type: number
                type: array
            type: object
        '400':
          description: bad input parameter
      tags:
        - task
      description: |
        get all versions of a task
      summary: get all task versions
definitions:
  data_service:
    properties:
      domain:
        $ref: '#/definitions/domain'
      id:
        type: integer
      model_config:
        type: string
      repo_name:
        type: string
    type: object
  deployment_status:
    properties:
      flow:
        $ref: '#/definitions/flow'
      id:
        type: integer
      prod_version:
        $ref: '#/definitions/flow_version'
      stage_version:
        $ref: '#/definitions/flow_version'
    type: object
  domain:
    properties:
      id:
        type: integer
      name:
        type: string
        uniqueItems: true
    type: object
  flow:
    properties:
      id:
        type: integer
      name:
        type: string
      product:
        $ref: '#/definitions/product'
    type: object
  flow_version:
    properties:
      flow:
        $ref: '#/definitions/flow'
      flow_json:
        type: string
      id:
        type: integer
      version:
        type: number
    type: object
  product:
    properties:
      id:
        type: integer
      name:
        type: string
        uniqueItems: true
    type: object
  task:
    properties:
      domain:
        $ref: '#/definitions/domain'
      env_variables:
        type: string
      framework:
        type: string
      id:
        type: integer
      input_schema:
        type: string
      is_bootstrapped:
        type: boolean
      is_published:
        type: boolean
      name:
        type: string
      output_schema:
        type: string
      path:
        type: string
      port:
        type: string
      repo_name:
        type: string
    type: object
x-components: {}

